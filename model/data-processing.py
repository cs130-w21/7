# Importing librariesimport pandas as pdimport numpy as npimport os# Loading datauser_rating = pd.read_csv('user-review.csv')business = pd.read_csv('business.csv')# Checking if data successfully loadedprint(user_rating.columns)print(business.columns)# Merging user_rating with businessesfinalBusiness = pd.merge(user_rating,                         business,                         left_on='business_id',                         right_on='business_id',                         how='left')cuisines = ["American (Traditional)", "Mexican", "American (New)", "Italian",            "Chinese", "Japanese", "Asian Fusion", "Indian", "Thai", "Middle Eastern",            "Vietnamese", "Greek", "French", "Korean", "Caribbean", "Latin American",            "Pakistani", "Hawaiian", "Lebanese", "Taiwanese", "Filipino", "Spanish",            "Irish", "African", "Turkish", "Cantonese", "Pan Asian", "German",            "Brazilian", "Ethiopian", "Polish", "Malaysian", "Arabian", "Mongolian"]types = ["Restaurants", "Fast Food", "Sandwiches", "Pizza", "Breakfast & Brunch", "Burgers",         "Specialty Food", "Bakeries", "Desserts", "Cafes", "Ice Cream & Frozen Yogurt",         "Chicken Wings", "Salad", "Seafood", "Sushi Bars", "Beer", "Sports Bars",         "Pubs", "Steakhouses", "Cocktail Bars", "Diners", "Ethnic Food",         "Food Delivery Services", "Food Trucks", "Soup", "Comfort Food", "Buffets",         "Donuts", "Tacos", "Hot Dogs", "Bubble Tea", "Chicken Shop", "Bagels",         "Noodles", "Tapas/Small Plates", "Food Stands", "Cupcakes", "Soul Food",         "Fish & Chips", "Dim Sum", "Cajun/Creole", "Ramen", "Creperies", "Food Court",         "Bistros", "Gelato", "Waffles", "Hot Pot", "Acai Bowls", "Kebab", "Pretzels"]# OneHotEncoding different cuisinesfor cuisine in cuisines:    finalBusiness[cuisine] = (finalBusiness['categories'].str.contains(cuisine, regex=False)).astype('int8')# OneHotEncoding different types of foodfor t in types:    finalBusiness[t] = (finalBusiness['categories'].str.contains(t, regex=False)).astype('int8')# Aggregating the number of time for each cuisine the users have experiencedusers = finalBusiness[["user_id"] + cuisines + types].groupby('user_id').sum()# Normalizing the number of times of each column to percentageusers[cuisines] = users[cuisines].div(users[cuisines].sum(axis=1), axis=0)users[types] = users[types].div(users[types].sum(axis=1), axis=0)users.reset_index(level=0, inplace = True)# Dropping unecessary columns for finalBusinessfinalBusiness.drop(columns='categories', inplace = True)# Exporting model-user-info and model-business-info to csv filesusers.to_csv('model-user-info.csv', index=False)finalBusiness.to_csv('model-business-info.csv', index=False)# Merging users info and businesses reviews to finalize data to train our machine learning modelfinalModelData = pd.merge(finalBusiness,                          users,                          left_on='user_id',                          right_on='user_id',                          how='left')# Exporting final data structure to train modelfinalModelData.to_csv('finalDataframe.csv',index=False)